
spring:

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/positivehabbit?serverTimezone=Asia/Seoul
    username: root
    password: cos1234
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      show-sql: true
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  redis:
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
  mail:
    host: smtp.gmail.com
    port: 587
    username: 12341234
    password: 12341234
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379
      password: ${REDIS_PASSWORD:}
      connect-timeout: 2000ms
      timeout: 2000ms

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - name
              - email
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  cloud:
    aws:
      s3:
        enabled: false      # 지금은 false로 꺼두기
        bucket: your-bucket-name
      region:
        static: ap-northeast-2
      credentials:
        access-key: YOUR_ACCESS_KEY
        secret-key: YOUR_SECRET_KEY
servlet:
  multipart:
    enabled: true
    max-file-size: 10MB
    max-request-size: 10MB
jwt:
  header: Authorization
  secret: 12341234
  token-validity-in-seconds: 86400

logging:
  level:
    me.j1yeon: DEBUG

api-key:
  kakao: ${kakao.key}

  logging:
    level:
      root: INFO
      com.habittracker: DEBUG
      org.springframework.security: DEBUG
      org.hibernate.SQL: DEBUG
      org.hibernate.type.descriptor.sql.BasicBinder: TRACE

  server:
    port: 8080
    error:
      include-message: always
      include-binding-errors: always

  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics
    endpoint:
      health:
        show-details: when-authorized




